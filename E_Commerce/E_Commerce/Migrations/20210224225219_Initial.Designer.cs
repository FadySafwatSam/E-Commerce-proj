// <auto-generated />
using System;
using E_Commerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Commerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210224225219_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E_Commerce.Data.Models.BuyList", b =>
                {
                    b.Property<int>("BuyListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("ItemId");

                    b.Property<int>("UserId");

                    b.HasKey("BuyListId");

                    b.ToTable("BuyListItems");
                });

            modelBuilder.Entity("E_Commerce.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription");

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("E_Commerce.Data.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuyListId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("ItemName");

                    b.Property<int?>("LikedListId");

                    b.Property<string>("UrlImg");

                    b.Property<decimal>("price");

                    b.HasKey("ItemId");

                    b.HasIndex("BuyListId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LikedListId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("E_Commerce.Data.Models.LikedList", b =>
                {
                    b.Property<int>("LikedListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("ItemId");

                    b.Property<int>("UserId");

                    b.HasKey("LikedListId");

                    b.ToTable("LikedItems");
                });

            modelBuilder.Entity("E_Commerce.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemId");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.Property<string>("UserPassword")
                        .IsRequired();

                    b.Property<string>("UserRole")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.HasIndex("ItemId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("E_Commerce.Data.Models.Item", b =>
                {
                    b.HasOne("E_Commerce.Data.Models.BuyList")
                        .WithMany("BuyItemLists")
                        .HasForeignKey("BuyListId");

                    b.HasOne("E_Commerce.Data.Models.Category", "category")
                        .WithMany("CategoryItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce.Data.Models.LikedList")
                        .WithMany("likedItems")
                        .HasForeignKey("LikedListId");
                });

            modelBuilder.Entity("E_Commerce.Data.Models.User", b =>
                {
                    b.HasOne("E_Commerce.Data.Models.Item")
                        .WithMany("LikedUsers")
                        .HasForeignKey("ItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
